# Pipeline will create/update pipelines when changes are detected to the main branch of the repository
# Update this pipeline specification with the correct repository and use Codefresh CLI for initial creation of creator
# Open a PR against the main branch and merge to see Codefresh pipelines updated.

version: '1.0'
kind: pipeline
metadata:
  name: jesse-step-test/pipeline-creator
spec:
  stages:
    - clone
    - 'pipeline updates'
  triggers:
    - name: pipelines
      type: git
      repo: jcantosz/pipelines
      events:
        - push.heads
      pullRequestAllowForkEvents: false
      commentRegex: /.*/gi
      branchRegex: /master/gi
      branchRegexInput: regex
      provider: github
      options:
        noCache: false
        noCfCache: false
        resetVolume: false
      context: github-jesse
      contexts: []
      variables: []
  steps:
    Clone:
      title: Cloning Repository...
      type: git-clone
      repo: ${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}
      revision: ${{CF_REVISION}}
      stage: clone
      git: github-jesse

    MergeTriggersIntoPipelines:
      title: Merge the triggers into the pipeline spec(s)
      type: codefreshdemo/pipeline-trigger-merge
      working_directory: ${{Clone}}
      arguments:
        SPEC: codefresh-spec.yaml
        ONLY_CHANGED: true
        TRIGGERS_SUBDIR: projects

    # CreateUpdatePipelines:
    #   title: Creating/Updating Pipelines...
    #   type: freestyle
    #   image: quay.io/codefreshplugins/pipeline-trigger-merge:1.0.0
    #   working_directory: ${{Clone}}
    #   shell: bash
    #   commands:
    #     - git log -m -1 --pretty="" --name-only | cat | sed 's|\(.*\)/.*|\1|' | sed -e 's|\(/projects\)*$||g' >> directories.txt
    #     - |-
    #       for i in $(awk '!seen[$0]++' directories.txt); do
    #         if [[ $i == "codefresh-spec.yaml" ]]; then
    #           codefresh create pipeline -f codefresh-spec.yaml || codefresh replace -f codefresh-spec.yaml
    #         elif [[ -d $i/projects ]]; then 
    #           SPEC=$i/codefresh-spec.yaml TRIGGERS=$i/projects /merge.sh
    #         else
    #           codefresh create pipeline -f $i/codefresh-spec.yaml || codefresh replace -f $i/codefresh-spec.yaml
    #         fi
    #       done
    #   stage: 'pipeline updates'